package com.lch;

import java.util.Arrays;

/**
 * @ClassName:Test02
 * @Author：Mr.lee
 * @DATE：2019/08/13
 * @TIME： 13:09
 * @Description: TODO
 */
public class Test02 {

    static int[] array = {2,3,5,1,4,0};


    public static void maopaoSort(int[] a) {

        //外层循环，是需要进行比较的轮数，一共进行5次即可

        for (int i = 0; i < a.length - 1; i++) {

            System.out.println("第" + (i + 1) + "轮排序后的数组为: " + Arrays.toString(a));

            //内存循环，是每一轮中进行的两两比较
            for (int j = 0; j < a.length -i-1; j++) {

                //a[j] > a[j + 1] 索引1上面的值大于索引2 上的值
                if (a[j] > a[j + 1]) {
                    int temp = a[j];
                    a[j] = a[j + 1];
                    a[j + 1] = temp;
                }
                System.out.println("内层第" + (j + 1) + "轮排序后的数组为: " + Arrays.toString(a));
            }


        }
    }

    public static void main(String[] args) {

        //调用冒泡排序的方法
        maopaoSort(array);

       /* 第1轮排序后的数组为: [2, 3, 5, 1, 4, 0]
        内层第1轮排序后的数组为: [2, 3, 5, 1, 4, 0]
        内层第2轮排序后的数组为: [2, 3, 5, 1, 4, 0]
        内层第3轮排序后的数组为: [2, 3, 1, 5, 4, 0]
        内层第4轮排序后的数组为: [2, 3, 1, 4, 5, 0]
        内层第5轮排序后的数组为: [2, 3, 1, 4, 0, 5]
        第2轮排序后的数组为: [2, 3, 1, 4, 0, 5]
        内层第1轮排序后的数组为: [2, 3, 1, 4, 0, 5]
        内层第2轮排序后的数组为: [2, 1, 3, 4, 0, 5]
        内层第3轮排序后的数组为: [2, 1, 3, 4, 0, 5]
        内层第4轮排序后的数组为: [2, 1, 3, 0, 4, 5]
        第3轮排序后的数组为: [2, 1, 3, 0, 4, 5]
        内层第1轮排序后的数组为: [1, 2, 3, 0, 4, 5]
        内层第2轮排序后的数组为: [1, 2, 3, 0, 4, 5]
        内层第3轮排序后的数组为: [1, 2, 0, 3, 4, 5]
        第4轮排序后的数组为: [1, 2, 0, 3, 4, 5]
        内层第1轮排序后的数组为: [1, 2, 0, 3, 4, 5]
        内层第2轮排序后的数组为: [1, 0, 2, 3, 4, 5]
        第5轮排序后的数组为: [1, 0, 2, 3, 4, 5]
        内层第1轮排序后的数组为: [0, 1, 2, 3, 4, 5]
*/

    }
}
